<?xml version="1.0"?>
<!--
Copyright 2005 Shinya Kasatani

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://global/content/xul.css" type="text/css"?>
<?xml-stylesheet href="chrome://selenium-ide/content/selenium-ide.css" type="text/css"?>
<?xul-overlay href="chrome://global/content/editMenuOverlay.xul"?>
<?xul-overlay href="chrome://browser/content/baseMenuOverlay.xul"?>
<?xul-overlay href="chrome://selenium-ide/content/selenium-ide-common.xul"?>

<!DOCTYPE page [
<!ENTITY % browserDTD SYSTEM "chrome://browser/locale/browser.dtd">
%browserDTD;
<!ENTITY % seleniumIdeDTD SYSTEM "chrome://selenium-ide/locale/selenium-ide.dtd">
%seleniumIdeDTD;
]>

<page title="Selenium IDE"
  id="selenium-ide-sidebar"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  onload="new Editor(window, true)"
  onunload="editor.unload()">
  <stringbundle id="strings" />

  <commandset id="editMenuCommands"/>
  <commandset id="baseMenuCommandSet"/>
  <commandset id="seleniumIDECommands"/>
  <commandset id="seleniumIDEUpdater"/>
  <keyset id="editMenuKeys" />
  <keyset id="seleniumIDEKeys" />
  <popupset id="seleniumIDEPopup" />

  <toolbox>
    <menubar id="menubar">
      <menu id="file-menu" label="File">
	<menupopup id="file-popup">
	  <menuitem label="&newTestCmd.label;" oncommand="editor.newTestCase();"/>
	  <menuitem label="&openCmd.label;" command="cmd_open" key="open-key"/>
	  <menuitem label="&saveTestCmd.label;" command="cmd_save" key="save-key"/>
	  <menuitem label="&saveTestAsCmd.label;" oncommand="editor.saveNewTestCase();"/>
	  <menuseparator/>
	  <menuitem label="&closeCmd.label;" command="cmd_close" key="close-key"/>
	</menupopup>
      </menu>
      <menu id="menu_edit">
        <menupopup>
          <menuitem id="menu_undo"/>
          <menuitem id="menu_redo"/>
	  <menuseparator/>
          <menuitem id="menu_cut"/>
          <menuitem id="menu_copy"/>
          <menuitem id="menu_paste"/>
          <menuitem id="menu_delete"/>
          <menuseparator/>
          <menuitem id="menu_selectAll"/>
	</menupopup>
      </menu>
      <menu id="view-menu" label="Options">
	<menupopup id="view-popup">
	  <menuitem label="&optionsCmd.label;" oncommand="editor.openSeleniumIDEPreferences();" />
	  <menu label="&formatCmd.label;">
	    <menupopup id="popup_formats" onpopupshowing="editor.populateFormatsPopup()" oncommand="editor.selectFormatFromMenu()">
	    </menupopup>
	  </menu>
	</menupopup>
      </menu>
    </menubar>
    <toolbar>
      <textbox id="baseURL" flex="1" tooltiptext="&baseURLTextbox.tooltip;"/>
    </toolbar>
    <toolbar>
      <toolbarbutton id="play-button" label="Play" class="icon" tooltiptext="Play from the beginning or start point" command="cmd_selenium_play"/>
      <toolbarbutton id="pause-button" label="Pause" class="icon pause" tooltiptext="Pause / Resume" command="cmd_selenium_pause"/>
      <toolbarbutton id="step-button" label="Step" class="icon" tooltiptext="Step" command="cmd_selenium_step"/>
      <toolbarseparator />
      <toolbarbutton id="testrunner-button" label="Play with Selenium TestRunner" class="icon" tooltiptext="Play with Selenium TestRunner" oncommand="editor.playback()"/>
      <toolbarseparator />
      <toolbarbutton id="record-button" label="Record" class="icon" tooltiptext="Record" checked="true" onclick="this.checked = !this.checked" oncommand="editor.toggleRecordingEnabled(this.checked)"/>
    </toolbar>
    <toolbar>
      <radiogroup id="runInterval" orient="horizontal">
	<radio id="run" label="Run" selected="true" value="0"/>
	<radio id="walk" label="Walk" value="500"/>
	<radio id="step" label="Step" value="-1"/>
      </radiogroup>
    </toolbar>
  </toolbox>

  <vbox flex="1">
    <tabbox flex="3" height="300">
      <tabs orient="horizontal" onselect="if (window.editor) { editor.tabSelected(selectedItem.id) }" id="viewTabs">
	<tab id="editorTab" label="Editor"/>
	<tab id="sourceTab" label="Source"/>
      </tabs>
      <tabpanels flex="1">
	<tabpanel orient="vertical">
	  <tree id="commands" flex="1" enableColumnDrag="false" hidecolumnpicker="true"
		context="treeContextMenu" onselect="editor.treeView.selectCommand()"
		ondblclick="goDoCommand('cmd_selenium_exec_command')" disableKeyNavigation="true">
		<!--onfocus="recorder.treeView.focused=true" onblur="recorder.treeView.focused=false">-->
	    <!--ondblclick="recorder.treeView.selectRecordIndex()">-->
	    <treecols>
	      <treecol id="command" label="Command" width="80"/>
	      <splitter class="tree-splitter" />
	      <treecol id="target" label="Target" flex="3" width="80"/>
	      <splitter class="tree-splitter" />
	      <treecol id="value" label="Value" flex="3" width="80"/>
	    </treecols>
	    <treechildren/>
	  </tree>
	  <separator class="thin"/>
	  <!-- command editing -->
	  <vbox id="commandDetail" persist="height">
	    <grid>
	      <columns>
		<column flex="1"/>
	      </columns>
	      <rows>
		<row align="center">
		  <!-- do drop down that depends upon the element type -->

		  <textbox disabled="true" id="commandAction" oninput="editor.treeView.updateCurrentCommand('command', this.value)" type="autocomplete" autocompletesearch="selenium-commands" enablehistory="true" forcecomplete="true" tabscrolling="true"/>
		</row>
		<row align="center">
		  <!-- show different options collected by the client. Allow user to override -->
		  <hbox flex="1">
		    <textbox flex="1" disabled="true" id="commandTarget" oninput="editor.treeView.updateCurrentCommand('target', editor.treeView.decodeText(this.value))"/>
		    <button label="Find" oncommand="editor.selDebugger.showElement(document.getElementById('commandTarget').value)"/>
		  </hbox>
		</row>
		<row align="center">
		  <textbox disabled="true" id="commandValue" oninput="editor.treeView.updateCurrentCommand('value', editor.treeView.decodeText(this.value))"/>
		</row>
	      </rows>
	    </grid>
	  </vbox>
	</tabpanel>
	<tabpanel orient="vertical">
	  <textbox id="source" multiline="true" flex="1" onchange="editor.sourceView.syncModel()"/>
	</tabpanel>
      </tabpanels>
    </tabbox>
    <splitter collapse="after">
      <grippy/>
    </splitter>

    <vbox id="logBox" flex="1" height="100">
      <hbox id="logMenu" align="center">
	<menulist id="logFilter" oncommand="editor.selDebugger.reloadLog()">
	  <menupopup>
	    <menuitem label="Debug" value="0"/>
	    <menuitem label="Info" value="1" selected="true"/>
	    <menuitem label="Warn" value="2"/>
	    <menuitem label="Error" value="3"/>
	  </menupopup>
	</menulist>
	<button id="logClear" label="Clear" oncommand="editor.selDebugger.clearLog()"/>
      </hbox>
      <iframe flex="1" id="logView" src="LogFrame.html">
      </iframe>
    </vbox>
  </vbox>

</page>

