<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="selenium-ide.css" type="text/css"?>
<!--
Copyright 2005 Shinya Kasatani

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<window title="Selenium IDE"
  id="selenium-ide"
  windowtype="global:selenium-ide"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  width="400"
  height="500"
  onload="startRecord()"
  onunload="stopRecord()">
  <script type="application/x-javascript" src="chrome://selenium-ide/content/tools.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/selenium/htmlutils.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/selenium/selenium-logging.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/selenium/selenium-browserbot.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/recorder-events.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/recorder.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/options.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/testCase.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/treeView.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/sourceView.js"/>
  <script type="application/x-javascript" src="chrome://selenium-ide/content/debugger.js"/>

  <keyset>
    <key id="close-key" modifiers="accel" key="W" oncommand="window.close();"/>
    <key id="copy-key" modifiers="accel" key="C" oncommand="recorder.treeView.copy();"/>
    <key id="cut-key" modifiers="accel" key="X" oncommand="recorder.treeView.cut();"/>
    <key id="paste-key" modifiers="accel" key="V" oncommand="recorder.treeView.paste();"/>
    <key id="delete-key" keycode="VK_DELETE" oncommand="recorder.treeView.deleteSelected();"/>
    <key id="breakpoint-key" key="B" oncommand="recorder.treeView.breakpoint();"/>
  </keyset>

  <popupset>
    <!-- upper right options -->
    <popup id="fileMenu">
      <menuitem label="New" oncommand="newTestCase();"/>
      <menuitem label="Open..." oncommand="loadTestCase();"/>
      <menuitem label="Save" oncommand="saveTestCase();"/>
      <menuitem label="Save As..." oncommand="saveNewTestCase();"/>
      <menuseparator/>
      <menuitem label="Options..." oncommand="openPreferences();" />
    </popup>
    <!-- popup menu on the tree view -->
    <popup id="treeContextMenu">
      <menuitem label="Cut" oncommand="recorder.treeView.cut()" key="cut-key"/>
      <menuitem label="Copy" oncommand="recorder.treeView.copy()" key="copy-key"/>
      <menuitem label="Paste" oncommand="recorder.treeView.paste()" key="paste-key"/>
      <menuitem label="Delete" oncommand="recorder.treeView.deleteSelected()" key="delete-key"/>
      <menuseparator/>
      <menuitem label="Insert New Command" oncommand="recorder.treeView.insertCommand()"/>
      <menuitem label="Insert New Comment" oncommand="recorder.treeView.insertComment()"/>
      <menuseparator/>
      <menuitem label="Clear All" oncommand="clear()"/>
      <menuseparator/>
      <menuitem label="Toggle Breakpoint" oncommand="recorder.treeView.breakpoint()" key="breakpoint-key"/>
    </popup>
    <popup id="popupSeleniumCommands">
      <menuitem label="Clear All" oncommand="clear()"/>
    </popup>
  </popupset>

  <vbox flex="1">
    <hbox align="center">
      <button label="File" oncommand="document.getElementById('fileMenu').showPopup(this, -1, -1, 'popup', 'bottomleft', 'topleft')" />
      <textbox id="filename" readonly="true" tooltiptext="Filename" flex="1"/>
    </hbox>
    <tabbox flex="1">
      <tabs orient="horizontal" onselect="tabSelected(selectedItem.id)" id="viewTabs">
	<tab id="editorTab" label="Editor"/>
	<tab id="sourceTab" label="Source"/>
      </tabs>
      <tabpanels flex="1">
	<tabpanel orient="vertical">
	  <tree id="commands" flex="1" enableColumnDrag="false" hidecolumnpicker="true"
		context="treeContextMenu" onselect="recorder.treeView.selectCommand()">
		<!--onfocus="recorder.treeView.focused=true" onblur="recorder.treeView.focused=false">-->
	    <!--ondblclick="recorder.treeView.selectRecordIndex()">-->
	    <treecols>
	      <treecol id="command" label="Command" flex="1"/>
	      <splitter class="tree-splitter" />
	      <treecol id="target" label="Target" flex="1"/>
	      <splitter class="tree-splitter" />
	      <treecol id="value" label="Value" flex="1"/>
	    </treecols>
	    <treechildren/>
	  </tree>
	  <separator class="thin"/>
	  <!-- command editing -->
	  <vbox id="commandDetail" persist="height">
	    <grid>
	      <columns>
		<column/>
		<column flex="1"/>
	      </columns>
	      <rows>
		<row align="center">
		  <!-- do drop down that depends upon the element type -->
		  <label control="commandAction" value="Command"/>
		  <!--
		  <textbox disabled="true" id="commandAction" oninput="recorder.treeView.updateCurrentCommand('command', this.value)" type="autocomplete" autocompletepopup="popupSeleniumCommands" enablehistory="true"/>
		  -->
		  <menulist disabled="true" editable="true" id="commandAction" oninput="recorder.treeView.updateCurrentCommand('command', this.value)" oncommand="recorder.treeView.updateCurrentCommand('command', this.value)">
		    <menupopup>
		    </menupopup>
		  </menulist>
		</row>
		<row align="center">
		  <!-- show different options collected by the client. Allow user to override -->
		  <label control="commandTarget" value="Target"/>
		  <textbox disabled="true" id="commandTarget" oninput="recorder.treeView.updateCurrentCommand('target', this.value)"/>
		  <!--
		  <button label="Find" oncommand="seleniumDebugger.showElement(document.getElementById('commandTarget').value)"/>
		  -->
		</row>
		<row align="center">
		  <label control="commandValue" value="Value"/>
		  <textbox disabled="true" id="commandValue" oninput="recorder.treeView.updateCurrentCommand('value', this.value)"/>
		</row>
	      </rows>
	    </grid>
	  </vbox>
	</tabpanel>
	<tabpanel orient="vertical">
	  <textbox id="source" multiline="true" flex="1" onchange="recorder.sourceView.updateTestCase(this.value)"/>
	</tabpanel>
      </tabpanels>
    </tabbox>
    <hbox align="center">
      <label value="Base URL"/>
      <textbox id="baseURL" flex="1" tooltiptext="Base URL used for playing in embedded Selenium."/>
    </hbox>
    <hbox align="center">
      <radiogroup id="runInterval" orient="horizontal">
	<radio id="run" label="Run" selected="true" value="0"/>
	<radio id="walk" label="Walk" value="500"/>
	<radio id="step" label="Step" value="-1"/>
      </radiogroup>
    </hbox>
    <hbox align="center">
      <button label="Start" oncommand="seleniumDebugger.start();"/>
      <button label="Continue" oncommand="seleniumDebugger.doContinue();"/>
      <button label="Show Log" oncommand="openLogWindow()"/>
    </hbox>
    <hbox align="center">
      <checkbox id="enableRecording" label="Enable recording" checked="true" oncommand="toggleRecordingEnabled(this.checked)"/>
      <spacer flex="1"/>
      <button label="Play with Selenium TestRunner" oncommand="playback()"/>
    </hbox>
  </vbox>

</window>

