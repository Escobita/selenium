#summary How the InternetExplorerDriver works

= How the InternetExplorerDriver Works =

The "best fit" language for the InternetExplorerDriver is C++, which drives the browser using the IE Automation COM components.

Key files are:

  * [http://code.google.com/p/webdriver/source/browse/trunk/jobbie/src/cpp/InternetExplorerDriver/InternetExplorerDriver.cpp InternetExplorerDriver.cpp]
  * [http://code.google.com/p/webdriver/source/browse/trunk/jobbie/src/cpp/InternetExplorerDriver/ElementWrapper.cpp ElementWrapper.cpp]

Most languages support calling or linking to exported functions from a C library, and for this reason we export a flattened API, which returns opaque handles to objects in [http://code.google.com/p/webdriver/source/browse/trunk/jobbie/src/cpp/InternetExplorerDriver/webdriver.h webdriver.h]

Currently, the Java binding uses JNI, and in this case the C++ source is organised into separate layers. Each Java class that uses native methods has a matching header and source file (with a very long name). These are responsible for handling all the conversion to and from JNI types, and call down to other classes which handle driving IE and marshalling from COM types to simpler types. At some point, we plan on moving to [http://jna.java.dev.net JNA] to help simplify development and unify the model used for writing the driver with other language bindings.

For the Java binding, XPath evaluation is done using Jaxen, an Open Source XPath engine. The key Java class is the [http://code.google.com/p/webdriver/source/browse/trunk/jobbie/src/java/com/googlecode/webdriver/ie/IeNavigator.java IeNavigator]. This ultimately makes use of the [http://code.google.com/p/webdriver/source/browse/trunk/jobbie/src/cpp/InternetExplorerDriver/ElementNode.cpp ElementNode] and [http://code.google.com/p/webdriver/source/browse/trunk/jobbie/src/cpp/InternetExplorerDriver/DocumentNode.cpp DocumentNode] C++ classes. In order to allow XPath support for other languages, we plan on migrating to a native XPath solution, accessed in the same way as other native functionality.
