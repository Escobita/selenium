#summary A description of the protocol used by WebDriver to communite with remote instances

= The Wire Protocol =

It is planned that all implementations of WebDriver will understand a
common wire protocol. The plan is to base this on
[http://www.json.org/ JSON] because this is a widely understood, easy
to parse format that has implementations already available in many different
languages. 

The expected protocol that will be used for transferring the JSON objects will be HTTP.

== Basic Concepts and Terms ==

In order to make sure that there is as little confusion as possible,
the following terms are going to be used:

  * *Client* means the local machine, on which the WebDriver API is being used.
  * *Server* means the remote machine, which is running the RemoteWebDriver. This also refers to drivers that implement the wire protocol directly, such as a future version of the Firefox extension used in the FirefoxDriver

The protocol will assume that the WebDriver API has been "flattened",
but there is an expectation that client implementations will take a
more Object-based approach, as demonstrated in the existing Java
API. It can be thought of request/response pairs of "commands" and
"responses" that look like:

=== Command ===

|| *Key* || *Type* || *Represents* ||
|| sessionId || String ||  An opaque handle, used by the driver to determine where to route the command to ||
|| context || String || An opaque handle, used by the driver to determine where to route the command to ||
|| commandName || String || The name of the method to invoke ||
|| parameters || Array || The parameters required for the command. The type of the parameters depends on the command ||

In order for commands to be understood directly, the "context" and "sessionId" should
be treated as an opaque handle by the client.

=== Response ===

|| *Key* || *Type* || *Represents* ||
|| sessionId || String ||  An opaque handle, used by the driver to determine where to route the command to. Pass back with the next command. ||
|| context || String || An opaque handle, used by the driver to determine where to route the command to. Pass back with the next command. ||
|| isError || Boolean || Should the response be interpreted as being an error or did the command complete successfully ||
|| value || Depends on the command being executed command || If `isError` is true, then this represents the error message, otherwise the response is to be interpreted depending on the command ||

== Allowed Types and Conversions ==

The following types may be sent between the client and server:

  * Strings
  * Numbers
  * Booleans
  * DOM elements
  * Arrays of the above.

The standard JSON mechanisms for encoding the primitive types (including arrays) are to be used. 

A DOM element will be sent back from the client as a String representing a relative URL that can be used to access the element. Later versions of this document will require that the element URL be sent back to the server when referencing a particular element, but for now be aware that the final path part of the relative URL contains the element's ID. This should be treated as an opaque string.

== List of Commands ==

The server should understand the following commands. This list is
currently incomplete. For example, it does not currently explain _how_
to set up the initial connection, and it lacks "house keeping" methods
which are probably necessary.

=== Session Management and Exception Handling ===

Methods used to create and manage webdriver sessions. A session can be thought of a new instance of a particular driver.

|| *URL* || *HTTP Method* || *Argument* || *Return Type* || *Meaning* || *Javadoc for Equivalent Method* || 
|| /session || POST || An object with the fields: "browserName", "platform", "javascriptEnabled", "version" || A redirect to a URL desribing the newly created driver || Create a new session. Equivalent to "new Driver()" || 
|| /session/:sessionId/:context || GET || none || An object with the same fields as for "/session" || This desribes the driver created by the call to "/session" || N/A ||
|| /session/:sessionId || DELETE || none || Ignored || Delete an existing session. This will allow the server to release any resources held for the driver, and consequently there is an expectation that users will call this method to allow this clean up || N/A ||


=== Element Finding Mechanisms ===

The list of mechanisms that can be used to locate an element or elements. Currently the element finding methods accept a list of parameters, but they should (and later will) take an object that looks like:

|| *List Index* || *Putative Field Name* || *Possible values* || *Meaning* ||
|| 0 || method || "class name", "id", "link text", "name", "xpath" || The mechanism used to locate the element. Equivalent to the same named fields from By.java ||
|| 1 || selector || Any string || What to search for ||

Given this information, the following methods can be used to locate an element

|| *URL* || *HTTP Method* || *Argument* || *Return Type* || *Meaning* || *Javadoc for Equivalent Method* || 
|| /session/:sessionId/:context/element || POST || See above || A single relative URL, representing the found element || Find an element on the page || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebDriver.html#findElement(org.openqa.selenium.By) WebDriver.findElement] ||
|| /session/:sessionId/:context/elements || POST || See above || An array of relative URLs || Find all element matching the given arguments || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebDriver.html#findElements(org.openqa.selenium.By) WebDriver.findElements] ||
|| /session/:sessionId/:context/element/:id/element/:using || POST || See above || A single relative URL, representing the found element || Find an element on the page which is a child of the element this resource points to || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebElement.html#findElement(org.openqa.selenium.By) WebElement.findElement] ||
|| /session/:sessionId/:context/element/:id/element/:using || POST || See above || An array of relative URLs || Find an element on the page which is a child of the element this resource points to || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebElement.html#findElements(org.openqa.selenium.By) WebElement.findElements] ||

=== WebDriver Methods ===

|| *URL* || *HTTP Method* || *Paramter Name:Type* || *Return Type* || *Meaning* || *Javadoc for Equivalent Method* || 
|| get || url:String || none || Go to the specified URL and wait until the page has completely loaded || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebDriver.html#get(java.lang.String) WebDriver.get] || 
|| currentTitle || none || String || Get the title of the page, as it would be displayed by the browser || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebDriver.html#getTitle() WebDriver.getTitle] ||

=== Element Specific Methods ===

|| *URL* || *HTTP Method* || *Paramter Name:Type* || *Return Type* || *Meaning* || *Javadoc for Equivalent Method* || 
|| /session/:sessionId/:context/element/:id/click || POST || none || none || Clicks the specified element and waits for a page to finish loading before returning || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebElement.html#click() WebElement.click] || 
|| /session/:sessionId/:context/element/:id/clear || POST || none || none || Clears the contents of elements that a user would normally type into, such as INPUT or TEXTAREA || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebElement.html#clear() WebElement.clear] || 
||session/:sessionId/:context/element/:id/value || POST || String of characters to type || none || Simulates sending keyboard input to the specified element. Can be used to set an element's value || [http://webdriver.googlecode.com/svn/javadoc/org/openqa/selenium/WebElement.html#sendKeys(java.lang.CharSequence...) WebElement.sendKeys] ||



