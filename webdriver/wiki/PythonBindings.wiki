#summary A summary of the python bindings for WebDriver.
#labels Phase-Deploy,Phase-Support

=Introduction=
The python bindings for WebDriver are now available in the trunk of WebDriver and are ready for use. The work is still in progress, your feedback would be welcome.

=Installation of the python bindings=
Checkout the source code from http://code.google.com/p/webdriver/source/checkout. In the root directory of the downloaded code, run the following command from a command prompt:
{{{python setup.py install}}}

And you need to have simplejson installed. Or add (webdriver_directory)/firefox/lib-src to your PYTHONPATH(the py_test script described below does this automatically).

That's it :) However you may want to run some sanity tests... If so you can run {{{py_tests}}} from the same root directory. On Windows platforms {{{py_tests.bat}}} is executed, on Linux {{{py_tests.sh}}} is executed. All the tests should pass. 

=Comparison with Java Bindings=
Here is a summary of the major differences between the python and Java bindings.

==Function names==
Function names separate compound terms with underscores, rather than using the Java camelCase e.g. {{{get_title()}}} in python vs. {{{getTitle()}}} in Java.

==Flatter structures==
To reflect pythonic behavior of flat object hierarchies the python bindings e.g. {{{find_element_by_xpath("//h1")}}} rather than {{{findElement(By.xpath("//h1"));}}}

==No PageFactory==
The PageFactory in the Java Bindings makes extensive use of Java Annotations. At this stage we don't intend to implement anything similar. 

==Fewer browsers supported==
The Python bindings implement the JsonWireProtocol used by the WebDriver Remote API and supports any of the Remote drivers. Currently these are limited to Firefox and the IPhoneDriver.

==PageObject Implementation==
Decorators are used to provide the PageObject support. The decorator is {{{@require_loaded}}}