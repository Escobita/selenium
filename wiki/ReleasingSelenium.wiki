#summary The release process for a new selenium

<wiki:toc depth=2>

= For Everything =

  # Bump the revision numbers at the top of the Rakefile.
  # Bump the revision number in firefox's install.rdf.
  # Bump the revision number in "server/src/java/VERSION.txt" and "common/src/js/core/scripts/selenium-version.js"
  # Bump the revision number in the ChromeDriver's manifest.json files.
  # Commit version number bump.

= For Java =

  # Run `./go clean release`
  # Upload the new versions of the ZIP files from "build/dist" to the downloads page.
  # Add a subversion tag!
  # Update the docs. I do this on a UNIX variant:
    # `./go javadocs`
    # `find docs/api/java -name "*.html" | grep -v svn | xargs rm`
    # `cp -r build/javadoc/* docs/api/java`
    # `svn st docs/api/java | grep -v \! | awk '{print $2}' | xargs svn rm`
    # `svn st docs/api/java | grep -v \? | awk '{print $2}' | xargs svn add`
    # `find docs/api/java -name "*.html" | xargs svn ps "svn:mime-type" "text/html"`
    # Commit new docs


== Updating the Maven Repos ==

 # Prerequisite 1: Make sure Maven 2.2.1 and GnuPG are installed.
 # Prerequisite 2: Make sure your `~/.m2/settings.xml` contains the following lines in the `<servers>` section:
{{{
    <server>
        <id>sonatype-nexus-snapshots</id>
        <username>_your-username-for-oss.sonatype.org_</username>
        <password>_your-password_</password>
    </server>
    <server>
        <id>sonatype-nexus-staging</id>
        <username>_your-username-for-oss.sonatype.org_</username>
        <password>_your-password_</password>
    </server>
}}}
 # Prerequisite 3: Make sure your GnuPG public key is distributed to `hkp://pgp.mit.edu` 
 # Update the version number in all pom.xml files under the maven directory (but do not check in those changes)
 # Execute:
   # go //java/client/src/org/openqa/selenium:client-combined:project
   # go //java/server/src/org/openqa/selenium/server:server:project
   # cd maven
   # mvn -Dtest=skip -DfailIfNoTests=false install
 # Now all maven artifacts are installed in your local repository - test them -- this is important, we should not deploy broken Maven artifacts.  
 # When everything is fine execute `mvn source:jar javadoc:jar -Dtest=skip -DfailIfNoTests=false -Dgpg.passphrase=_your-GnuPG-key-passphrase_ -Psign deploy`                
 # Finally goto http://oss.sonatype.org, log in, close the staging repository, and promote it to the releases repository.

= For .NET =

  # Run `go clean dotnet`
  # If you want to create docs and have the correct tools installed, run `msbuild rake-tasks\msbuild\webdriver.msbuild.proj /t:BuildDocs`. This will create WebDriver.chm in the build/dotnet directory.
  # Zip up the build/dotnet directory (do not include subdirectories)
  # Upload the ZIP file to the downloads page.

= For Ruby =

== selenium-webdriver ==

 # To release a new gem you will need to be registered as a gem owner on rubygems.org.
  # Bump the version number in rb/build.desc.
  # Update rb/CHANGES with a summary of changes since the last release.
  # Update docs: `rm -rf docs/api/rb && ./go //rb:docs` (you'll need the YARD gem installed)
  # Make sure the mime types are correct: 
    # `svn propset svn:mime-type text/html docs/api/rb/**/*.html`
    # `svn propset svn:mime-type application/javascript docs/api/rb/**/*.js`
    # `svn propset svn:mime-type text/css docs/api/rb/**/*.css`
  # Commit the changes.
  # `./go //rb:gem:release`
  # Bump version number in rb/build.desc to "X.X.X.dev" and commit the change.

= For Python =
# To release a new version you need to be registered as a Owner/Maintener on pypi.python.org
 # Bump the version number in setup.py 
 # `./go //py_release`
 # Bump the version number to the next version with dev e.g. 2.0b3dev and commit changes


= Areas to Improve =

  * We should really automate the version number bumps.